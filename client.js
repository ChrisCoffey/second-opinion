// Generated by CoffeeScript 1.7.1
(function() {
  var e, elements, r, res, restraunts, results, yelpOAuthClient, yelpRestClient, _i, _j, _k, _len, _len1, _len2;

  yelpOAuthClient = (function() {
    var consumerKey, consumerSecret, signatureMethod, token, tokenSecret;

    function yelpOAuthClient() {}

    consumerKey = 'fnAIzIA5cLF6NSl_Lr7Hbw';

    consumerSecret = '-lbNbJtdQJLIqW7AtV1xUfP5tBY';

    token = 'SkTYgQkbdmG6zgWIMqWpMHgiA-sudkEn';

    tokenSecret = '8actk2saU1JKQ2MfjDceow_Jzuw';

    signatureMethod = 'hmac-sha1';

    yelpOAuthClient.prototype.search = function(rterm, rlocation) {
      var encodedSignature, method, parameters, reqUrl;
      parameters = {
        oauth_consumer_key: consumerKey,
        oauth_token: token,
        oauth_nonce: '12345GFDSA',
        oauth_timestamp: new Date(),
        oauth_signature_method: signatureMethod,
        oauth_version: 2,
        term: rterm,
        location: rlocation
      };
      method = 'GET';
      reqUrl = 'http://api.yelp.com/v2/search';
      encodedSignature = oauthSignature.generate(method, reqUrl, parameters, consumerSecret, tokenSecret);
      return $.ajax({
        url: reqUrl,
        type: method,
        data: 'term=#{ rterm }&location=#{ rlocation }&oauth_consumer_key=#{oauth_consumer_key}&oauth_token=#{oauth_token}&oauth_signature_method=#{oauth_signature_method}&oauthSignature=#{encodedSignature}&oauth_timestamp=#{parameters.oauth_timestamp}&oauth_nonce=#{parameters.oauth_nonce}',
        success: function(d) {
          return console.log(d);
        }
      });
    };

    return yelpOAuthClient;

  })();

  yelpRestClient = (function() {
    function yelpRestClient() {}

    yelpRestClient.prototype.baseURL = 'http://www.yelp.com/search/?';

    yelpRestClient.prototype.search = function(business, location) {
      var dest, loc;
      dest = 'find_desc=#{business}';
      return loc = 'find_loc=#{location}';
    };

    return yelpRestClient;

  })();

  elements = $(".search-location");

  for (_i = 0, _len = elements.length; _i < _len; _i++) {
    e = elements[_i];
    console.log(e.innerHTML);
  }

  restraunts = $(".rest-name");

  for (_j = 0, _len1 = restraunts.length; _j < _len1; _j++) {
    r = restraunts[_j];
    console.log(r.innerHTML);
  }

  results = $(".result").find(".ratings-col");

  for (_k = 0, _len2 = results.length; _k < _len2; _k++) {
    res = results[_k];
    $(res).append("<span>Yelp Stuff</span>");
    c.search("Tico", "Boston");
  }

}).call(this);
